#!ipxe
set ver 1.18.2

##### Check if CPU supports 64-bit, PAE, VMX, SVM
cpuid --ext 29 && set arch amd64 || set arch x86
cpuid 6 && set pae yes ||
cpuid --ecx 5 && set vmx yes ||
cpuid --ext --ecx 2 && set svm yes ||
isset ${vmx} || isset ${svm} && set hw_virt yes ||
##### Set NTP and MTU
ntp 0.pool.ntp.org ||
set mtu 1500
##### VARIABLES
#set auth <...>
set src https://raw.githubusercontent.com/Losenmann/SmartBoot/master/boot/
set tool ${src}tools/
set x64 Your`s CPU supports 64 commands, press 'Y' to install 64bits...
set err Error, your`s CPU not support 64-bit commands
##### Delete data from variables
set url_winpe && set protocol
##### Links
set url_avira https://install.avira-update.com/package/rs_avira/unix/int/rescue-system.iso
set url_krd https://rescuedisk.s.kaspersky-labs.com/updatable/2018/krd.iso
set url_drweb http://download.geo.drweb.com/pub/drweb/livedisk/drweb-livedisk-900-cd.iso
set url_centos http://mirror.centos.org/centos/7/os/x86_64/
set url_clearos http://clearos.uberglobalmirror.com/7/os/x86_64/
set url_opensuse http://download.opensuse.org/tumbleweed/repo/oss/
set url_debian https://ftp.acc.umu.se/debian/dists/stable/main/installer-i386/current/images/netboot/debian-installer/i386/
set url_debian64 https://ftp.acc.umu.se/debian/dists/stable/main/installer-amd64/current/images/netboot/debian-installer/amd64/
set url_kali64 ftp://ftp.acc.umu.se/mirror/kali.org/kali/dists/kali-rolling/main/installer-amd64/current/images/netboot/debian-installer/amd64/
set url_kali64 ftp://ftp.acc.umu.se/mirror/kali.org/kali/dists/kali-rolling/main/installer-i386/current/images/netboot/debian-installer/i386/
set url_parrot http://mirror.truenetwork.ru/parrot/dists/parrot/main/installer-i386/current/images/netboot/debian-installer/i386/
set url_parrot64 http://mirror.truenetwork.ru/parrot/dists/parrot/main/installer-amd64/current/images/netboot/debian-installer/amd64/
set url_ubuntu http://archive.ubuntu.com/ubuntu/dists/disco/main/installer-i386/current/images/netboot/ubuntu-installer/i386/
set url_ubuntu64 http://archive.ubuntu.com/ubuntu/dists/disco/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/



##### AUTHORIZATION
:login set username && set password
colour --basic 0 7 && colour --basic 7 6

console --x 1920 --y 1440 --picture ${src}main5.png
#console --x 1366 --y 768

#console --x 1024 --y 768 --picture ${src}auth.png
:login-r login || goto login-r
iseq ${username} root && iseq ${password} kernel && goto login-ok ||
boot ftp://${username}:${password}@${auth}/cust && goto login-ok ||
boot ftp://${username}:${password}@${auth}/dev && goto login-ok ||
goto login-r
:login-ok
################################ MAIN MENU ################################
:main-menu
colour --basic 9 7 && colour --basic 9 6
colour --rgb 0xffffff 7
console --x 1024 --y 768 --keep
:main-menu_a imgfree
menu Welcome to SmartBoot menu
	item out	Logout
item --gap --		--- System Boot ----------------------------------------------------------------------------------------
	item winpe	Windows/
	item linux	Linux/
	item othos	Other-OS/
	item tools	Tools/
	item live	LiveCD/
	item offline	Offline Boot/
	item info	Information
item --gap --		--- iPXE Tools: -----------------------------------------------------------------------------------------
	item config	Configure iPXE
	item shell	iPXE Shell
	item exit	Exit
	item reboot	Reboot
	item power	Power Off
choose --default out --timeout 20000 target && goto ${target} || goto main-menu_a
:config config && goto main-menu_a
:out goto login
:reboot reboot
:power poweroff
:exit exit
:shell shell
goto main-menu_a
################################ WINDOWS MENU ################################
:winpe
console --x 1024 --y 768 --picture ${src}win.png
:winpe_c
menu Windows boot menu
	item main-menu	<...
item --gap --		--- Microsoft Windows(WinPE)  ----------------------------------------------------------------------------------
item --gap Selected server: ${url_winpe}
	item winpe_s	Add Server WinPE
	item winpe_clr	Clear Server WinPE
#	isset ${url_winpe} && item winxp Windows XP || item --gap Windows XP
#	isset ${url_winpe} && item winvista Windows Vist || item --gap Windows Vista
	isset ${url_winpe} && item win7 Windows 7 || item --gap Windows 7
	isset ${url_winpe} && item win8.1 Windows 8.1 || item --gap Windows 8.1
	isset ${url_winpe} && item win10 Windows 10 || item --gap Windows 10
#	isset ${url_winpe} && item win2008 Windows Server 2008 || item --gap Windows Server 2008
#	isset ${url_winpe} && item win2012 Windows Server 2012 || item --gap Windows Server 2012
#	isset ${url_winpe} && item win2016 Windows Server 2016 || item --gap Windows Server 2016
choose --default main-menu target && goto ${target} || goto main-menu_c
:winpe_clr set username && set password && set url_winpe && set protocol
goto winpe_c
################################ Server WinPE ################################
:winpe_s
menu WinPE boot server
	item winpe	<...
item --gap --		--- Server protocol
	item https://	HTTPS
	item http://	HTTP
	item ftp://	FTP
	item tftp	TFTP
	item nfs	NFS
choose selected || goto winpe
iseq ${selected} winpe && goto winpe_c ||
set protocol ${selected}
iseq ${selected} https:// && echo Server address* && read url_winpe && goto winpe_a ||
iseq ${selected} http:// && echo Server address* && read url_winpe && goto winpe_a ||
iseq ${selected} ftp:// && echo Server address* && read url_winpe && goto winpe_a ||
iseq ${selected} tftp && set url_winpe ${next-server} && goto winpe_c ||
iseq ${selected} nfs && set url_winpe ${next-server} && goto winpe_c ||
:winpe_a
echo Enter Username && read username ||
echo Enter Password && read password ||
isset ${username} && set username ${username}: ||
isset ${password} && set password ${password}@ ||
set url_winpe ${protocol}${username}${password}${url_winpe}
goto winpe_c
################################ LINUX MENU ################################
:linux
console --x 1024 --y 768 --picture ${src}linux.png
:linux_c
menu Linux boot menu
	item main-menu	<...
item --gap --		--- Linux distribute ----------------------------------------------------------------------------------
	item archos	Arch Linux
	item centos	CentOS
	item clearos	ClearOS
	item debian	Debian
#	item deepin	Deepin
#	item element	ElementaryOS
#	item fedora	Fedora
#	item gentoo	Gentoo
	item kali	Kali Linux
#	item manjaro	Manjaro
#	item mint	Linux Mint
	item opensuse	OpenSUSE - Tumbleweed
	item parrot	ParrotOS - Home
#	item react	ReactOS
#	item solus	Solus
	item slax	Slax
	item ubuntu	Ubuntu
choose --default main-menu target && goto ${target} ||
goto linux_c
################################ OTHER-OS MENU ################################
:othos
console --x 1024 --y 768 --picture ${src}ohter.png
:othos_c
menu Boot menu Other OS
	item main-menu	<...
item --gap --		--- OtherOS ----------------------------------------------------------------------------------
#	item android_os	Android-x86
#	item chrome_os	ChromiumOS
#	item xcp_os	Hypervisor XCP-ng
choose --default main-menu target && goto ${target} ||
goto othos_c
################################ UTILITIES MENU ################################
:tools
console --x 1024 --y 768 --picture ${src}tools.png
:tools_c
menu Boot menu Tools and Utilities
	item main-menu	<...
item --gap --		--- Tools & Utilities ----------------------------------------------------------------------------------
	item avira	Avira Rescue System
	item drweb	Dr.Web LiveDisk
	item krd	Kaspersky Rescue Disk	
	item mem86	Memtest86
	item mem86+	Memtest86+
	item vcr	Victoria
	item mhdd	MHDD
#	item wint	WinPE Tools (Iperf/CPU-Z/FurMark)
choose --default main-menu target && goto ${target} ||
goto tools_c
################################ Windows 7 PE ################################
:win7
kernel ${url_winpe}/wimboot
initrd ${url_winpe}/winpeshl.ini winpeshl.ini
initrd ${url_winpe}/win7/startnet.cmd startnet.cmd
initrd ${url_winpe}/${arch}/media/Boot/BCD BCD
initrd ${url_winpe}/${arch}/media/Boot/boot.sdi boot.sdi
initrd ${url_winpe}/${arch}/media/sources/boot.wim boot.wim
boot || goto main-menu
################################ Windows 8.1 PE ################################
:win8.1
kernel ${url_winpe}/wimboot
initrd ${url_winpe}/winpeshl.ini winpeshl.ini
initrd ${url_winpe}/win8.1/startnet.cmd startnet.cmd
initrd ${url_winpe}/${arch}/media/Boot/BCD BCD
initrd ${url_winpe}/${arch}/media/Boot/boot.sdi boot.sdi
initrd ${url_winpe}/${arch}/media/sources/boot.wim boot.wim
boot || goto main-menu
################################ Windows 10 PE ################################
:win10
kernel ${url_winpe}/wimboot
initrd ${url_winpe}/winpeshl.ini winpeshl.ini
initrd ${url_winpe}/win10/startnet.cmd startnet.cmd
initrd ${url_winpe}/${arch}/media/Boot/BCD BCD
initrd ${url_winpe}/${arch}/media/Boot/boot.sdi boot.sdi
initrd ${url_winpe}/${arch}/media/sources/boot.wim boot.wim
chain
goto main-menu
################################ Arch Linux ################################
:archos
chain https://www.archlinux.org/releng/netboot/archlinux.ipxe ||
goto main-menu
################################ CentOS ################################
:centos
kernel ${url_centos}images/pxeboot/vmlinuz repo=${url_centos} initrd=initrd.img ||
initrd ${url_centos}images/pxeboot/initrd.img ||
boot || goto main-menu
################################ ClearOS ################################
:clearos
kernel ${url_clearos}images/pxeboot/vmlinuz repo=${url_clearos} initrd=initrd.img ||
initrd ${url_clearos}images/pxeboot/initrd.img ||
boot || goto main-menu
################################ Kali ################################
:kali
iseq ${arch} x86 || prompt --key y ${x64} && goto kali64 ||
kernel ${url_kali}linux ||
initrd ${url_kali}initrd.gz ||
boot || goto main-menu
:kali64
kernel ${url_kali64}linux ||
initrd ${url_kali64}initrd.gz ||
boot || goto main-menu
################################ OpenSUSE ################################
:opensuse
kernel ${url_opensuse}boot/x86_64/loader/linux
initrd ${url_opensuse}boot/x86_64/loader/initrd
imgargs linux netsetup=dhcp install=${url_opensuse} initrd=initrd splash=silent showopts
boot || goto main-menu
################################ ParrotOS ################################
:parrot
iseq ${arch} x86 || prompt --key y ${x64} && goto parrot64 ||
kernel ${url_parrot}linux ||
initrd ${url_parrot}initrd.gz ||
boot || goto main-menu
:parrot64
kernel ${url_parrot64}linux ||
initrd ${url_parrot64}initrd.gz ||
boot || goto main-menu
################################ Slax ################################
:slax
iseq ${arch} x86 || prompt --key y ${x64} && goto slax64 ||
chain http://slax.org/ipxe/?arch=32bit || goto main-menu
:slax64
chain http://slax.org/ipxe/?arch=64bit || goto main-menu
################################ Debian ################################
:debian
iseq ${arch} x86 || prompt --key y ${x64} && goto debian64 ||
kernel ${url_debian}linux ||
initrd ${url_debian}initrd.gz ||
boot || goto main-menu
:debian64
kernel ${url_debian64}linux ||
initrd ${url_debian64}initrd.gz ||
boot || goto main-menu
################################ Ubuntu ################################
:ubuntu
iseq ${arch} x86 || prompt --key y ${x64} && goto ubuntu64 ||
kernel ${url_ubuntu}linux ||
initrd ${url_ubuntu}initrd.gz ||
boot || goto main-menu
:ubuntu64
kernel ${url_ubuntu64}linux ||
initrd ${url_ubuntu64}initrd.gz ||
boot || goto main-menu
################################ Avira Rescue System ################################
:avira
kernel ${src}memdisk ||
initrd ${url_avira} ||
imgargs memdisk iso raw ||
boot || goto main-menu
################################ Dr.Web LiveDisk ################################
:drweb
kernel ${src}memdisk ||
initrd ${url_drweb} ||
imgargs memdisk iso raw ||
boot || goto main-menu
################################ Kaspersky Rescue Disk ################################
:krd
kernel ${src}memdisk ||
initrd ${url_krd} ||
imgargs memdisk iso raw ||
boot || goto main-menu
################################ Memtest86 ################################
:mem86
kernel ${src}memdisk ||
initrd ${tool}memtest86_current.iso ||
imgargs memdisk iso raw ||
boot || goto main-menu
################################ Memtest86+ ################################
:mem86+
kernel ${src}memdisk ||
initrd ${tool}memtest86+_current.iso ||
imgargs memdisk iso raw ||
boot || goto main-menu
################################ MHDD ################################
:mhdd
kernel ${src}memdisk ||
initrd ${tool}mhdd_current.iso ||
imgargs memdisk iso raw ||
boot || goto main-menu
################################ Victoria ################################
:vcr
kernel ${src}memdisk ||
initrd ${tool}vcr_current.iso ||
imgargs memdisk iso raw ||
boot || goto main-menu
################################################################################################
:info
menu SmartBoot ${ver}
item --gap -- --------------------------------------------------------------------------------------------------
item --gap -- * Fixed minor bugs
item --gap -- --------------------------------------------------------------------------------------------------
item --gap -- This bootloader allows you to boot the OS over the network from public servers. Those OS which is
item --gap -- closed code, such as: "Windows" or "OSX", etc. must be loaded individually from non-public server.
item --gap -- For Windows, bootloader settings are already prepared. You only need to unzip distribution to the
item --gap -- server, as well as change the file "start.cmd" in the directory /boot/winpe/win*. File with the
item --gap -- instruction ("readme") is at the root of /. Almost all utilities have an "ISO" image and load to 
item --gap -- "RAM" via "memdisk". If desired, you can change the background image for each menu ("readme").
item --gap -- The software used is open source!
item --gap -- --------------------------------------------------------------------------------------------------
item --gap -- This bootloader was created by 1 independent person. During development, much time and attention
item --gap -- was paid to a convenient user experience. If you want to help the project, you can donate.
item --gap -- Donations are accepted on Yandex Money 410015216730856, so you will help me :)
item --gap -- --------------------------------------------------------------------------------------------------
	item main-menu_a	<...
choose --default main-menu_a target && goto ${target} ||
goto main-menu_a
