#!ipxe
set ver 1.3.0

##### Check if CPU supports 64-bit, PAE, VMX, SVM
cpuid --ext 29 && set arch amd64 || set arch i386
cpuid --ext 29 && set arch-x 64 || set arch-x 32
cpuid 6 && set pae yes ||
cpuid --ecx 5 && set vmx yes ||
cpuid --ext --ecx 2 && set svm yes ||
isset ${vmx} || isset ${svm} && set hw_virt yes ||
##### Set NTP and MTU
ntp 0.pool.ntp.org ||
set mtu 1500
##### VARIABLES
#set auth <...>
set src http://boot.bo0ot.ru/boot/
set memdisk ${src}memdisk
set images ${src}images/
set x64 Your`s CPU supports 64 commands, press 'Y' to install 64bits...
set err Error, your`s CPU not support 64-bit commands
##### Delete data from variables
set url_winpe && set protocol
##### Variables Links
set url_centos 7
set url_clearos 7
set vers_solus 4.0
set url_slax 9 && set v 9.1
set url_tinycore 10
set url_freenas 11.2-U5
set vres_fedora && set version ${version}/ && inc version && goto Fedora ||
##### Links
set url_mem86 ${src}tools/memtest86_current.iso
set url_mem86+ ${src}tools/memtest86+_current.iso
set url_vcr ${src}tools/vcr.current.iso
set url_mhdd ${src}tools/mhdd.current.iso
set url_avira http://install.avira-update.com/package/rs_avira/unix/int/rescue-system.iso
set url_krd http://rescuedisk.s.kaspersky-labs.com/updatable/2018/krd.iso
set url_drweb http://download.geo.drweb.com/pub/drweb/livedisk/drweb-livedisk-900-cd.iso
set url_centos http://mirror.centos.org/centos/${url_centos}/
set url_clearos http://clearos.uberglobalmirror.com/${url_clearos}/
set url_kolibri http://builds.kolibrios.org/eng/kolibri.iso
set url_arch https://www.archlinux.org/releng/netboot/archlinux.ipxe
set url_fedora http://mirrors.kernel.org/fedora/releases/
set url_solus http://solus.fin.veatnet.de/iso/images/
set url_opensuse http://download.opensuse.org/
set url_slax http://ftp.sh.cvut.cz/slax/Slax-${url_slax}.x/slax-${arch-x}bit-${url_slax}.${v}.iso
set url_parrot http://cdimage.parrotsec.org/parrot/dists/stable/main/
set url_kali http://ftp.acc.umu.se/mirror/kali.org/kali/dists/kali-rolling/main/
set url_debian http://ftp.acc.umu.se/debian/dists/
set url_tinycore http://www.tinycorelinux.net/${url_tinycore}.x/x86/release/
set url_ubuntu http://archive.ubuntu.com/ubuntu/dists/
set url_freebsd http://ftp.freebsd.org/pub/FreeBSD/releases/ISO-IMAGES/
set url_puppy http://distro.ibiblio.org/puppylinux/
set url_alpine http://dl-cdn.alpinelinux.org/alpine/latest-stable/
set url_nixos https://hydra.nixos.org/job/nixos/release-19.03/nixos.netboot.x86_64-linux/latest-finished/download/netboot.ipxe
set url_android https://osdn.net/dl/android-x86/
set url_xcp_ng http://mirror.iextreme.org/xcp-ng/netinstall/latest/
set url_steamos http://repo.steampowered.com/download/
set url_slackware http://mirrors.slackware.com/slackware/slackware64-current/
set url_coreos http://stable.release.core-os.net/amd64-usr/current/coreos_production_iso_image.iso
set url_freenas http://download.freenas.org/latest/x64/FreeNAS-${url_freenas}.iso/
##### AUTHORIZATION
:login set username && set password
colour --basic 0 7 && colour --basic 7 6
console --x 1024 --y 768 -p ${src}auth.png
:login-r login || goto login-r
iseq ${username} root && iseq ${password} kernel && goto login-ok || console --keep
boot ftp://${username}:${password}@${auth}/cust && goto login-ok || console --keep
boot ftp://${username}:${password}@${auth}/dev && goto login-ok || console --keep
goto login-r
:login-ok
clear username ; clear password ; set gfx 1
################################ MAIN MENU ################################
:main imgfree
iseq ${gfx} 1 && set gfx 0 && console --x 1024 --y 768 -p ${src}main.png ||
colour --basic 9 7 && colour --basic 9 6 && colour --rgb 0xffffff 7
menu Welcome to SmartBoot menu
	item out	Logout
item --gap --		--- System Boot ----------------------------------------------------------------------------------------
	item winpe	Windows/
	item linux	Linux/
	item othos	Other OS/
	item tools	Tools/
	item info	Information
item --gap --		--- iPXE Tools: -----------------------------------------------------------------------------------------
	item config	Configure iPXE
	item shell	iPXE Shell
	item exit	Exit
	item reboot	Reboot
	item power	Power Off
choose --default out --timeout 20000 target && goto ${target} || goto main
:config config && goto main
:out goto login
:reboot reboot
:power poweroff
:exit exit
:shell shell
goto main
################################ WINDOWS MENU ################################
:winpe 
iseq ${gfx} 0 && set gfx 1 && console --x 1024 --y 768 --picture ${src}win.png ||
menu Windows boot menu
	item main	<...
item --gap Selected server: ${protocol}${url_winpe}
item --gap --		--- Microsoft Windows(WinPE)  ----------------------------------------------------------------------------------
	item winpe_link				Add Server WinPE
	item winpe_clr				Clear Server WinPE
	isset ${url_winpe} && item winxp	Windows XP || item --gap Windows XP
	isset ${url_winpe} && item winvista	Windows Vist || item --gap Windows Vista
	isset ${url_winpe} && item win7		Windows 7 || item --gap Windows 7
	isset ${url_winpe} && item win8.1	Windows 8.1 || item --gap Windows 8.1
	isset ${url_winpe} && item win10	Windows 10 || item --gap Windows 10
	isset ${url_winpe} && item win2008	Windows Server 2008 || item --gap Windows Server 2008
	isset ${url_winpe} && item win2012	Windows Server 2012 || item --gap Windows Server 2012
	isset ${url_winpe} && item win2016	Windows Server 2016 || item --gap Windows Server 2016
choose selected || goto winpe
iseq ${selected} main && goto main || iseq ${selected} winpe_link && goto winpe_link ||
iseq ${selected} winpe_clr && clear username && clear password && clear url_winpe && clear protocol && goto winpe ||
set win_vers ${selected} && set url_winpe ${protocol}${secure}${url_winpe} && goto win
goto winpe
##### Server WinPE
:winpe_link
menu WinPE boot server
	item winpe	<...
item --gap --		--- Server protocol
	item https://	HTTPS
	item http://	HTTP
	item tftp	TFTP
	item ftp://	FTP
choose selected && set protocol ${selected} || goto winpe
iseq ${selected} winpe && goto winpe ||
iseq ${selected} https:// && echo HTTPS server address: && read url_winpe && goto winpe ||
iseq ${selected} http:// && echo HTTP server address: && read url_winpe && goto winpe ||
iseq ${selected} tftp && set url_winpe ${next-server} && goto winpe ||
iseq ${selected} ftp:// && echo FTP server address: && read url_winpe && || goto winpe
echo Username: && read username && echo Password: && read password ||
isset ${username} && set username ${username}: ; isset ${password} && set password ${password}@ ||
set secure ${username}${password}
goto winpe
################################ LINUX MENU ################################
:linux console --x 1024 --y 768 --picture ${src}linux.png
:linux_c
menu Linux Distribute Boot Menu
	item main	<...
item --gap --		--- OFFLINE Boot
	item slax		Slax
item --gap --		--- ONLINE Boot ----------------------------------------------------------------------------------
	item alpine		Alpine
	item archos		Arch Linux
	item centos		CentOS
	item clearos		ClearOS
#	item coreos		CoreOS
	item debian		Debian
	item fedora		Fedora
	item freebsd		FreeBSD
	item freenas		FreeNAS
	item kali		Kali Linux
	item kolibri		KolibriOS
	item nixos		NixOS
#	item omv		OpenMediaVault
	item opensuse		OpenSUSE
	item parrot		Parrot
	item slackware		Slackware
	item tinycore		Tiny Core Linux
	item ubuntu		Ubuntu
choose selected || goto linux_c
iseq ${selected} main && goto main ||
set setos ${selected}
iseq ${setos} slax && goto ${setos} || iseq ${setos} kali && goto ${setos} ||
iseq ${setos} kolibri && goto version || iseq ${setos} centos && goto ${setos} ||
iseq ${setos} debian && goto version || iseq ${setos} archos && goto ${setos} ||
iseq ${setos} clearos && goto ${setos} || iseq ${setos} nixos && goto ${setos} ||
iseq ${setos} freebsd && goto version || iseq ${setos} parrot && goto ${setos} ||
iseq ${setos} freenas && goto ${setos} ||
################################
:desktop
menu Desktop Environment or Edition
	item back	<...
item --gap --		--- Edition 
iseq ${setos} fedora && item Everything		Fedora Everything ||
iseq ${setos} fedora && item Server		Fedora Server ||
iseq ${setos} fedora && item Workstation	Fedora Workstation ||
iseq ${setos} opensuse && item	distribution	OpenSUSE Leap ||
iseq ${setos} opensuse && item	tumbleweed	OpenSUSE Tumbleweed ||
iseq ${setos} tinycore && item Core		Core ||
iseq ${setos} tinycore && item CorePlus		CorePlus ||
iseq ${setos} tinycore && item TinyCore		TinyCore ||
iseq ${setos} ubuntu && item Desktop		Ubuntu Desktop ||
choose selected || goto desktop
iseq ${selected} back && goto linux_c || set desktop ${selected}
iseq ${setos} tinycore && goto ${setos} ||
iseq ${setos} opensuse && goto ${setos} ||
################################
:version
menu Version ${setos}
	item back	<...
item --gap --		${setos}
iseq ${setos} android && item 8.1		Android-x86 8.1 ||
iseq ${setos} android && item 7.1		Android-x86 7.1 ||
iseq ${setos} android && item 6.0		Android-x86 6.0 ||
iseq ${setos} android && item 5.1		Android-x86 5.1 ||
iseq ${setos} android && item 4.4		Android-x86 4.4 ||
iseq ${setos} debian && item stable		Debian latest ||
iseq ${setos} debian && item Debian9.9		Debian 9 ||
iseq ${setos} debian && item Debian8.11		Debian 8 ||
iseq ${setos} fedora && item 30			Fedora 30 ||
iseq ${setos} fedora && item 29			Fedora 29 ||
iseq ${setos} fedora && item 28			Fedora 28 ||
iseq ${setos} freebsd && item 12.0		FreeBSD 12.0 ||
iseq ${setos} freebsd && item 11.3		FreeBSD 11.3 ||
iseq ${setos} freebsd && item 11.2		FreeBSD 11.2 ||
iseq ${setos} kolibri && item ${url_kolibri}	KolibriOS latest unstable ||
iseq ${setos} kolibri && item kolibri_en.iso	KolibriOS 0.7.7.0 en ||
iseq ${setos} kolibri && item kolibri_ru.iso	KolibriOS 0.7.7.0 ru ||
iseq ${setos} ubuntu && item disco		Ubuntu 19.04 LTS ||
iseq ${setos} ubuntu && item bionic		Ubuntu 18.04 LTS ||
iseq ${setos} ubuntu && item xenial		Ubuntu 16.04 LTS ||
iseq ${setos} ubuntu && item trusty		Ubuntu 14.04 LTS ||
iseq ${setos} ubuntu && item precise 		Ubuntu 12.04 LTS ||
choose selected || goto version
iseq ${selected} back && goto linux_c || set version ${selected}
goto ${setos}
################################ OTHER-OS MENU ################################
:othos console --x 1024 --y 768 --picture ${src}ohter.png
menu Boot menu Other OS
	item main	<...
item --gap --		--- OtherOS ----------------------------------------------------------------------------------
	item android	Android-x86
#	item chrome	ChromiumOS
	item xcp_ng	Hypervisor XCP-ng
	item steam	SteamOS
choose --default main target && goto ${target} ||
goto othos
################################ UTILITIES MENU ################################
:tools console --x 1024 --y 768 --picture ${src}ohter.png
menu Boot menu Tools and Utilities
	item back			<...
item --gap --		--- Tools & Utilities ----------------------------------------------------------------------------------
	item avira	Avira Rescue System
	item drweb	Dr.Web LiveDisk
	item krd	Kaspersky Rescue Disk	
	item mem86	Memtest86
	item mem86+	Memtest86+
	item vcr	Victoria
	item mhdd	MHDD
choose selected || goto main
iseq ${selected} back && goto main || set {tool} ${selected}
goto tool
################################
##### WinPE
################################
:winpe
kernel ${url_winpe}/wimboot
initrd ${url_winpe}/winpeshl.ini winpeshl.ini
initrd ${url_winpe}/${setos}/startnet.cmd startnet.cmd
initrd ${url_winpe}/${arch}/media/Boot/BCD BCD
initrd ${url_winpe}/${arch}/media/Boot/boot.sdi boot.sdi
initrd ${url_winpe}/${arch}/media/sources/boot.wim boot.wim
boot || goto main
################################
##### Alpine
################################
:alpine
iseq ${arch} i386 && set dir releases/x86/netboot/ ||
iseq ${arch} amd64 && set dir releases/x86_64/netboot/ ||
kernel ${url_alpine}${dir}vmlinuz-vanilla ||
initrd ${url_alpine}${dir}initramfs-vanilla ||
imgargs vmlinuz-vanilla alpine_repo=${url_alpine}main modules=loop,squashfs modloop=${url_alpine}${dir}/modloop-vanilla quiet nomodeset
boot || clear dir && imgfree && goto main
################################
##### Android-x86
################################
:android
iseq ${arch} i386 && set dir android-x86-${version}-r2.iso ||
iseq ${arch} amd64 && set dir android-x86_64-${version}-r2.iso ||
kernel ${memdisk} ||
initrd ${url_android}${dir} ||
imgargs memdisk iso raw ||
boot || clear dir && clear version && imgfree && goto main
################################
##### Arch Linux
################################
:archos
boot ${url_arch} ||
imgfree && goto main
################################
##### CentOS
################################
:centos
set dir os/x86_64/
kernel ${url_centos}${dir}images/pxeboot/vmlinuz ||
initrd ${url_centos}${dir}images/pxeboot/initrd.img ||
imgargs vmlinuz repo=${url_centos}${dir} initrd=initrd.img ||
boot || clear dir && imgfree && goto main
################################
##### ClearOS
################################
:clearos
set dhcp ip=${ip} gateway=${gateway} mask=${netmask} dns=${dns} && set dir os/x86_64/
kernel ${url_clearos}${dir}images/pxeboot/vmlinuz ||
initrd ${url_clearos}${dir}images/pxeboot/initrd.img ||
imgargs vmlinuz BOOTIF=${netX/mac} ip={dhcp} repo=${url_clearos}${dir} initrd=initrd.img ||
boot || clear dir && imgfree && goto main
################################
##### CoreOS
################################
:coreos
iseq ${arch} amd64 || goto main
kernel ${memdisk} ||
initrd ${url_coreos} ||
imgargs memdisk iso raw ||
boot || imgfree && goto main
################################
##### Debian
################################
:debian
set dir /main/installer-${arch}/current/images/netboot/gtk/debian-installer/${arch}/
kernel ${url_debian}${version}${dir}linux ||
initrd ${url_debian}${version}${dir}initrd.gz ||
imgargs linux vga=788 initrd=initrd.gz ||
boot || clear dir && clear version && imgfree && goto main
################################
##### Fedora
################################
:fedora
set dir /x86_64/os/
kernel ${url_fedora}${version}/${desktop}${dir}images/pxeboot/vmlinuz ||
initrd ${url_fedora}${version}/${desktop}${dir}images/pxeboot/initrd.img ||
imgargs vmlinuz repo=${url_fedora}${version}/${desktop}${dir} initrd=initrd.img ||
boot || clear dir && clear desktop && clear version && imgfree && goto main
################################
##### FreeBSD
################################
:freebsd
set dir ${version}/FreeBSD-${version}-RELEASE-${arch}-memstick.img
kernel ${memdisk} || 
initrd ${url_freebsd}${dir} ||
imgargs memdisk iso raw ||
boot || clear dir && clear version && imgfree && goto main
################################
##### FreeNAS
################################
:freenas
kernel ${memdisk} || 
initrd ${url_freenas} ||
imgargs memdisk iso raw ||
boot || imgfree && goto main
################################
##### Gentoo
################################
:gentoo
iseq ${arch-x} 86 && set dir gentoo/install-x86-minimal.iso ||
iseq ${arch} amd64 && set dir gentoo/install-amd64-minimal.iso ||
kernel ${memdisk} ||
initrd ${images}${dir} ||
imgargs memdisk iso raw ||
boot || clear dir && imgfree && goto main
################################
##### Kali
################################
:kali
set dir installer-${arch}/current/images/netboot/gtk/debian-installer/${arch}/
kernel ${url_kali}${dir}linux ||
initrd ${url_kali}${dir}initrd.gz ||
imgargs linux  vga=788 initrd=initrd.gz ||
boot || clear dir && imgfree && goto main
################################
##### KolibriOS
################################
:kolibri
kernel ${memdisk} ||
iseq ${url_kolibri} ${version} && initrd ${url_kolibri} ||
iseq ${url_kolibri} ${version} || initrd ${images}kolibri_0.7.7.0/${version} ||
imgargs memdisk iso raw ||
boot || clear version && imgfree && goto main
################################
##### NixOS
################################
:nixos
boot {url_nixos}
################################
##### OpenSUSE
################################
:opensuse
iseq ${desktop} distribution && set dir /openSUSE-current/repo/oss/ || set dir /repo/oss/
kernel ${url_opensuse}${desktop}${dir}boot/x86_64/loader/linux
initrd ${url_opensuse}${desktop}${dir}boot/x86_64/loader/initrd ||
imgargs linux vga=788 install=${url_opensuse}${desktop}${dir} initrd=initrd ||
boot || clear dir && clear desktop && imgfree && goto main
################################
##### Parrot
################################
:parrot
set dir installer-${arch}/current/images/netboot/gtk/debian-installer/${arch}/
kernel ${url_parrot}${dir}linux ||
initrd ${url_parrot}${dir}initrd.gz ||
imgargs linux vga=788 repo=http://cdimage.parrotsec.org/parrot/ initrd=initrd.gz ||
boot || clear dir && imgfree && goto main
################################
##### Slackware
################################
:slackware
kernel ${url_slackware}kernel/huge.s/bzImage ||
initrd ${url_slackware}isolinux/initrd.img ||
imgargs bzImage initrd=initrd.img load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 nomodeset SLACK_KERNEL=huge.s ||
boot || imgfree && goto main
################################
##### Slax
################################
:slax menu
console --picture ${src}bootlogo.png
item perch,automount		Run Slax (Persistent changes)
item automount					Run Slax (Fresh start)
item toram						Run Slax (Copy to RAM)
choose selected || goto main
iseq ${selected} main && goto main || set run ${selected}
kernel ${images}slax/${arch}/boot/vmlinuz ||
initrd ${images}slax/${arch}/boot/initrfs.img ||
imgargs vmlinuz vga=normal initrd=/slax/boot/initrfs.img load_ramdisk=1 prompt_ramdisk=0 rw printk.time=0 slax.flags=${run} ||
boot || clear run && imgfree && goto main
################################
##### Tiny Core
################################
:tinycore
kernel ${memdisk} ||
initrd ${url_tinycore}${desktop}-current.iso ||
imgargs memdisk iso raw ||
boot || clear desktop && imgfree && goto main
################################
##### Ubuntu
################################
:ubuntu
set dir ${version}/main/installer-${arch}/current/images/netboot/
kernel ${url_ubuntu}${dir}ubuntu-installer/${arch}/linux ||
initrd ${url_ubuntu}${dir}ubuntu-installer/${arch}/initrd.gz ||
imgargs vga=788 linux initrd=initrd.gz ||
boot || clear dir && clear version && imgfree && goto main
################################
##### XCP-ng
################################
:xcp_ng
kernel ${url_xcp_ng}boot/vmlinuz ||
initrd ${url_clearos}boot/xen.gz ||
imgargs repo=${url_xcp_ng} vga=788 initrd=initrd.img ||
boot || imgfree && goto main
################################
##### Run Tool 
################################ 
:tool
kernel ${memdisk} ||
initrd $${tool} ||
imgargs memdisk iso raw ||
boot || clear tool && imgfree && goto main
################################################################################################
################################################################################################
################################################################################################
goto main
